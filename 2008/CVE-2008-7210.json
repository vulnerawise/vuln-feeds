{
  "metadata": {
    "timestamp": "2025-02-26T20:12:25Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2008-7210",
        "description": "directory.php in AJchat 0.10 allows remote attackers to bypass input validation and conduct SQL injection attacks via a numeric parameter with a value matching the s parameter's hash value, which prevents the associated $_GET[\"s\"] variable from being unset.  NOTE: it could be argued that this vulnerability is due to a bug in the unset PHP command (CVE-2006-3017) and the proper fix should be in PHP; if so, then this should not be treated as a vulnerability in AJChat.",
        "metadata": {
          "published": "",
          "last_modified": "",
          "confidence_level": "medium",
          "severity": "high",
          "source": "",
          "status": ""
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "poc",
          "automatable": false
        },
        "metrics": [
          {
            "source": "nvd@nist.gov",
            "type": "Primary",
            "cvss_version": "2.0",
            "vector_string": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
            "attack_vector": "NETWORK",
            "base_score": 7.5
          }
        ],
        "timeline": {
          "references": [
            {
              "type": "reference",
              "url": "http://www.securityfocus.com/bid/27241",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2009-09-11T05:00:00.000Z"
            },
            {
              "type": "reference",
              "url": "https://gitlab.com/exploit-database/exploitdb/-/blob/main/exploits/php/webapps/4890.txt",
              "source_type": "poc",
              "source": "exploitdb",
              "description": "AJchat 0.10 - 'unse' SQL Injection",
              "published": "2008-01-11T05:00:00.000Z"
            }
          ],
          "repositories": null
        },
        "epss": {
          "score": 0.00068,
          "percentile": 0.32716
        },
        "counts": {
          "public_exploit_count": 2
        }
      }
    }
  ]
}