{
  "metadata": {
    "timestamp": "2025-02-26T18:14:56Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2020-10932",
        "description": "An issue was discovered in Arm Mbed TLS before 2.16.6 and 2.7.x before 2.7.15. An attacker that can get precise enough side-channel measurements can recover the long-term ECDSA private key by (1) reconstructing the projective coordinate of the result of scalar multiplication by exploiting side channels in the conversion to affine coordinates; (2) using an attack described by Naccache, Smart, and Stern in 2003 to recover a few bits of the ephemeral scalar from those projective coordinates via several measurements; and (3) using a lattice attack to get from there to the long-term ECDSA private key used for the signatures. Typically an attacker would have sufficient access when attacking an SGX enclave and controlling the untrusted OS.",
        "metadata": {
          "published": "",
          "last_modified": "",
          "confidence_level": "low",
          "severity": "medium",
          "source": "",
          "status": ""
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "none",
          "automatable": false
        },
        "metrics": [
          {
            "source": "nvd@nist.gov",
            "type": "Primary",
            "cvss_version": "2.0",
            "vector_string": "AV:L/AC:M/Au:N/C:P/I:N/A:N",
            "attack_vector": "LOCAL",
            "base_score": 1.89999997615814
          },
          {
            "source": "nvd@nist.gov",
            "type": "Primary",
            "cvss_version": "3.1",
            "vector_string": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
            "attack_vector": "LOCAL",
            "base_score": 4.69999980926514
          }
        ],
        "timeline": {
          "references": null,
          "repositories": null
        },
        "epss": {
          "score": 0.00057,
          "percentile": 0.26663
        },
        "counts": {
          "public_exploit_count": 0
        }
      }
    }
  ]
}