{
  "metadata": {
    "timestamp": "2025-02-26T20:12:25Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2025-21657",
        "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched_ext: Replace rq_lock() to raw_spin_rq_lock() in scx_ops_bypass()\n\nscx_ops_bypass() iterates all CPUs to re-enqueue all the scx tasks.\nFor each CPU, it acquires a lock using rq_lock() regardless of whether\na CPU is offline or the CPU is currently running a task in a higher\nscheduler class (e.g., deadline). The rq_lock() is supposed to be used\nfor online CPUs, and the use of rq_lock() may trigger an unnecessary\nwarning in rq_pin_lock(). Therefore, replace rq_lock() to\nraw_spin_rq_lock() in scx_ops_bypass().\n\nWithout this change, we observe the following warning:\n\n===== START =====\n[    6.615205] rq-\u003ebalance_callback \u0026\u0026 rq-\u003ebalance_callback != \u0026balance_push_callback\n[    6.615208] WARNING: CPU: 2 PID: 0 at kernel/sched/sched.h:1730 __schedule+0x1130/0x1c90\n=====  END  =====",
        "metadata": {
          "published": "",
          "last_modified": "",
          "confidence_level": "low",
          "severity": "",
          "source": "",
          "status": ""
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "none",
          "automatable": false
        },
        "metrics": null,
        "timeline": {
          "references": null,
          "repositories": null
        },
        "epss": {
          "score": 0.00043,
          "percentile": 0.11716
        },
        "counts": {
          "public_exploit_count": 0
        }
      }
    }
  ]
}