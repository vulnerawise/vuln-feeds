{
  "metadata": {
    "timestamp": "2025-02-23T08:14:13Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2024-40900",
        "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: remove requests from xarray during flushing requests\n\nEven with CACHEFILES_DEAD set, we can still read the requests, so in the\nfollowing concurrency the request may be used after it has been freed:\n\n     mount  |   daemon_thread1    |    daemon_thread2\n------------------------------------------------------------\n cachefiles_ondemand_init_object\n  cachefiles_ondemand_send_req\n   REQ_A = kzalloc(sizeof(*req) + data_len)\n   wait_for_completion(\u0026REQ_A-\u003edone)\n            cachefiles_daemon_read\n             cachefiles_ondemand_daemon_read\n                                  // close dev fd\n                                  cachefiles_flush_reqs\n                                   complete(\u0026REQ_A-\u003edone)\n   kfree(REQ_A)\n              xa_lock(\u0026cache-\u003ereqs);\n              cachefiles_ondemand_select_req\n                req-\u003emsg.opcode != CACHEFILES_OP_READ\n                // req use-after-free !!!\n              xa_unlock(\u0026cache-\u003ereqs);\n                                   xa_destroy(\u0026cache-\u003ereqs)\n\nHence remove requests from cache-\u003ereqs when flushing them to avoid\naccessing freed requests.",
        "metadata": {
          "published_date": "2024-07-12T13:15:13.433",
          "last_modified_date": "2024-11-21T09:31:49.010",
          "confidence_level": "low",
          "severity": "n/a"
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "none",
          "automatable": false
        },
        "counts": {
          "public_exploit_count": 0
        },
        "epss": {
          "score": 0.00045,
          "percentile": 0.17964
        },
        "metrics": [],
        "timeline": {
          "references": [],
          "repositories": []
        }
      }
    }
  ]
}