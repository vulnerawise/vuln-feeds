{
  "metadata": {
    "timestamp": "2025-02-22T00:46:13Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2024-53861",
        "description": "pyjwt is a JSON Web Token implementation in Python. An incorrect string comparison is run for `iss` checking, resulting in `\"acb\"` being accepted for `\"_abc_\"`. This is a bug introduced in version 2.10.0: checking the \"iss\" claim changed from `isinstance(issuer, list)` to `isinstance(issuer, Sequence)`. Since str is a Sequnce, but not a list, `in` is also used for string comparison. This results in `if \"abc\" not in \"__abcd__\":` being checked instead of `if \"abc\" != \"__abc__\":`. Signature checks are still present so real world impact is likely limited to denial of service scenarios. This issue has been patched in version 2.10.1. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
        "metadata": {
          "published_date": "2024-11-29T19:15:09.433",
          "last_modified_date": "2024-12-02T19:15:12.150",
          "confidence_level": "low",
          "severity": "low"
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "none",
          "automatable": false
        },
        "counts": {
          "public_exploit_count": 0
        },
        "epss": {
          "score": 0.00064,
          "percentile": 0.30536
        },
        "metrics": [
          {
            "source": "security-advisories@github.com",
            "type": "Secondary",
            "cvss_version": "3.1",
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N",
            "attack_vector": "NETWORK",
            "base_score": 2.20000004768372
          }
        ],
        "timeline": {
          "references": [],
          "repositories": []
        }
      }
    }
  ]
}