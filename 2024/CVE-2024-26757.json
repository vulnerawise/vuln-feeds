{
  "metadata": {
    "timestamp": "2025-02-25T10:12:11Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2024-26757",
        "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: Don't ignore read-only array in md_check_recovery()\n\nUsually if the array is not read-write, md_check_recovery() won't\nregister new sync_thread in the first place. And if the array is\nread-write and sync_thread is registered, md_set_readonly() will\nunregister sync_thread before setting the array read-only. md/raid\nfollow this behavior hence there is no problem.\n\nAfter commit f52f5c71f3d4 (\"md: fix stopping sync thread\"), following\nhang can be triggered by test shell/integrity-caching.sh:\n\n1) array is read-only. dm-raid update super block:\nrs_update_sbs\n ro = mddev-\u003ero\n mddev-\u003ero = 0\n  -\u003e set array read-write\n md_update_sb\n\n2) register new sync thread concurrently.\n\n3) dm-raid set array back to read-only:\nrs_update_sbs\n mddev-\u003ero = ro\n\n4) stop the array:\nraid_dtr\n md_stop\n  stop_sync_thread\n    set_bit(MD_RECOVERY_INTR, \u0026mddev-\u003erecovery);\n    md_wakeup_thread_directly(mddev-\u003esync_thread);\n    wait_event(..., !test_bit(MD_RECOVERY_RUNNING, \u0026mddev-\u003erecovery))\n\n5) sync thread done:\n md_do_sync\n set_bit(MD_RECOVERY_DONE, \u0026mddev-\u003erecovery);\n md_wakeup_thread(mddev-\u003ethread);\n\n6) daemon thread can't unregister sync thread:\n md_check_recovery\n  if (!md_is_rdwr(mddev) \u0026\u0026\n      !test_bit(MD_RECOVERY_NEEDED, \u0026mddev-\u003erecovery))\n   return;\n  -\u003e -\u003e MD_RECOVERY_RUNNING can't be cleared, hence step 4 hang;\n\nThe root cause is that dm-raid manipulate 'mddev-\u003ero' by itself,\nhowever, dm-raid really should stop sync thread before setting the\narray read-only. Unfortunately, I need to read more code before I\ncan refacter the handler of 'mddev-\u003ero' in dm-raid, hence let's fix\nthe problem the easy way for now to prevent dm-raid regression.",
        "metadata": {
          "published_date": "2024-04-03T17:15:52.207",
          "last_modified_date": "2024-11-21T09:03:00.147",
          "confidence_level": "low",
          "severity": "medium"
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "none",
          "automatable": false
        },
        "counts": {
          "public_exploit_count": 0
        },
        "epss": {
          "score": 0.00043,
          "percentile": 0.11721
        },
        "metrics": [
          {
            "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
            "type": "Secondary",
            "cvss_version": "3.1",
            "vector_string": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "attack_vector": "LOCAL",
            "base_score": 5.5
          }
        ],
        "timeline": {
          "references": [],
          "repositories": []
        }
      }
    }
  ]
}