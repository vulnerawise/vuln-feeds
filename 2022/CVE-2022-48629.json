{
  "metadata": {
    "timestamp": "2025-02-26T22:10:29Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2022-48629",
        "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qcom-rng - ensure buffer for generate is completely filled\n\nThe generate function in struct rng_alg expects that the destination\nbuffer is completely filled if the function returns 0. qcom_rng_read()\ncan run into a situation where the buffer is partially filled with\nrandomness and the remaining part of the buffer is zeroed since\nqcom_rng_generate() doesn't check the return value. This issue can\nbe reproduced by running the following from libkcapi:\n\n    kcapi-rng -b 9000000 \u003e OUTFILE\n\nThe generated OUTFILE will have three huge sections that contain all\nzeros, and this is caused by the code where the test\n'val \u0026 PRNG_STATUS_DATA_AVAIL' fails.\n\nLet's fix this issue by ensuring that qcom_rng_read() always returns\nwith a full buffer if the function returns success. Let's also have\nqcom_rng_generate() return the correct value.\n\nHere's some statistics from the ent project\n(https://www.fourmilab.ch/random/) that shows information about the\nquality of the generated numbers:\n\n    $ ent -c qcom-random-before\n    Value Char Occurrences Fraction\n      0           606748   0.067416\n      1            33104   0.003678\n      2            33001   0.003667\n    ...\n    253   ?        32883   0.003654\n    254   ?        33035   0.003671\n    255   ?        33239   0.003693\n\n    Total:       9000000   1.000000\n\n    Entropy = 7.811590 bits per byte.\n\n    Optimum compression would reduce the size\n    of this 9000000 byte file by 2 percent.\n\n    Chi square distribution for 9000000 samples is 9329962.81, and\n    randomly would exceed this value less than 0.01 percent of the\n    times.\n\n    Arithmetic mean value of data bytes is 119.3731 (127.5 = random).\n    Monte Carlo value for Pi is 3.197293333 (error 1.77 percent).\n    Serial correlation coefficient is 0.159130 (totally uncorrelated =\n    0.0).\n\nWithout this patch, the results of the chi-square test is 0.01%, and\nthe numbers are certainly not random according to ent's project page.\nThe results improve with this patch:\n\n    $ ent -c qcom-random-after\n    Value Char Occurrences Fraction\n      0            35432   0.003937\n      1            35127   0.003903\n      2            35424   0.003936\n    ...\n    253   ?        35201   0.003911\n    254   ?        34835   0.003871\n    255   ?        35368   0.003930\n\n    Total:       9000000   1.000000\n\n    Entropy = 7.999979 bits per byte.\n\n    Optimum compression would reduce the size\n    of this 9000000 byte file by 0 percent.\n\n    Chi square distribution for 9000000 samples is 258.77, and randomly\n    would exceed this value 42.24 percent of the times.\n\n    Arithmetic mean value of data bytes is 127.5006 (127.5 = random).\n    Monte Carlo value for Pi is 3.141277333 (error 0.01 percent).\n    Serial correlation coefficient is 0.000468 (totally uncorrelated =\n    0.0).\n\nThis change was tested on a Nexus 5 phone (msm8974 SoC).",
        "metadata": {
          "published": "",
          "last_modified": "",
          "confidence_level": "high",
          "severity": "medium",
          "source": "",
          "status": ""
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "poc",
          "automatable": false
        },
        "metrics": [
          {
            "source": "nvd@nist.gov",
            "type": "Primary",
            "cvss_version": "3.1",
            "vector_string": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
            "attack_vector": "LOCAL",
            "base_score": 5.5
          }
        ],
        "timeline": {
          "references": [
            {
              "type": "reference",
              "url": "https://git.kernel.org/stable/c/0f9b7b8df17525e464294c916acc8194ce38446b",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2024-03-05T05:00:00.000Z"
            },
            {
              "type": "reference",
              "url": "https://git.kernel.org/stable/c/184f7bd08ce56f003530fc19f160d54e75bf5c9d",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2024-03-05T05:00:00.000Z"
            },
            {
              "type": "reference",
              "url": "https://git.kernel.org/stable/c/485995cbc98a4f77cfd4f8ed4dd7ff8ab262964d",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2024-03-05T05:00:00.000Z"
            },
            {
              "type": "reference",
              "url": "https://git.kernel.org/stable/c/a680b1832ced3b5fa7c93484248fd221ea0d614b",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2024-03-05T05:00:00.000Z"
            },
            {
              "type": "reference",
              "url": "https://git.kernel.org/stable/c/a8e32bbb96c25b7ab29b1894dcd45e0b3b08fd9d",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2024-03-05T05:00:00.000Z"
            },
            {
              "type": "reference",
              "url": "https://git.kernel.org/stable/c/ab9337c7cb6f875b6286440b1adfbeeef2b2b2bd",
              "source_type": "poc",
              "source": "nvd",
              "description": "",
              "published": "2024-03-05T05:00:00.000Z"
            }
          ],
          "repositories": null
        },
        "epss": {
          "score": 0.00046,
          "percentile": 0.19652
        },
        "counts": {
          "public_exploit_count": 6
        }
      }
    }
  ]
}