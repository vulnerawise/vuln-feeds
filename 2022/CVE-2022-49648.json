{
  "metadata": {
    "timestamp": "2025-02-27T02:47:37Z"
  },
  "data": [
    {
      "cve": {
        "id": "CVE-2022-49648",
        "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/histograms: Fix memory leak problem\n\nThis reverts commit 46bbe5c671e06f070428b9be142cc4ee5cedebac.\n\nAs commit 46bbe5c671e0 (\"tracing: fix double free\") said, the\n\"double free\" problem reported by clang static analyzer is:\n  \u003e In parse_var_defs() if there is a problem allocating\n  \u003e var_defs.expr, the earlier var_defs.name is freed.\n  \u003e This free is duplicated by free_var_defs() which frees\n  \u003e the rest of the list.\n\nHowever, if there is a problem allocating N-th var_defs.expr:\n  + in parse_var_defs(), the freed 'earlier var_defs.name' is\n    actually the N-th var_defs.name;\n  + then in free_var_defs(), the names from 0th to (N-1)-th are freed;\n\n                        IF ALLOCATING PROBLEM HAPPENED HERE!!! -+\n                                                                 \\\n                                                                  |\n          0th           1th                 (N-1)-th      N-th    V\n          +-------------+-------------+-----+-------------+-----------\nvar_defs: | name | expr | name | expr | ... | name | expr | name | ///\n          +-------------+-------------+-----+-------------+-----------\n\nThese two frees don't act on same name, so there was no \"double free\"\nproblem before. Conversely, after that commit, we get a \"memory leak\"\nproblem because the above \"N-th var_defs.name\" is not freed.\n\nIf enable CONFIG_DEBUG_KMEMLEAK and inject a fault at where the N-th\nvar_defs.expr allocated, then execute on shell like:\n  $ echo 'hist:key=call_site:val=$v1,$v2:v1=bytes_req,v2=bytes_alloc' \u003e \\\n/sys/kernel/debug/tracing/events/kmem/kmalloc/trigger\n\nThen kmemleak reports:\n  unreferenced object 0xffff8fb100ef3518 (size 8):\n    comm \"bash\", pid 196, jiffies 4295681690 (age 28.538s)\n    hex dump (first 8 bytes):\n      76 31 00 00 b1 8f ff ff                          v1......\n    backtrace:\n      [\u003c0000000038fe4895\u003e] kstrdup+0x2d/0x60\n      [\u003c00000000c99c049a\u003e] event_hist_trigger_parse+0x206f/0x20e0\n      [\u003c00000000ae70d2cc\u003e] trigger_process_regex+0xc0/0x110\n      [\u003c0000000066737a4c\u003e] event_trigger_write+0x75/0xd0\n      [\u003c000000007341e40c\u003e] vfs_write+0xbb/0x2a0\n      [\u003c0000000087fde4c2\u003e] ksys_write+0x59/0xd0\n      [\u003c00000000581e9cdf\u003e] do_syscall_64+0x3a/0x80\n      [\u003c00000000cf3b065c\u003e] entry_SYSCALL_64_after_hwframe+0x46/0xb0",
        "metadata": {
          "published": "",
          "last_modified": "",
          "confidence_level": "low",
          "severity": "",
          "source": "",
          "status": ""
        },
        "impact": {
          "cisa_kev": false,
          "reported_exploited": false,
          "exploit_maturity": "none",
          "automatable": false
        },
        "metrics": null,
        "timeline": {
          "references": null,
          "repositories": null
        },
        "epss": {
          "score": 0,
          "percentile": 0
        },
        "counts": {
          "public_exploit_count": 0
        }
      }
    }
  ]
}